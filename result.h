//==========================================================================================
//	リザルト表示ヘッダ[result.h]
//	Author : KAZUNORI MARUHASHI
//
//	Update :
//		YYYY/MM/DD	Updater :
//
//		2017/05/26	Updater : KAZUNORI MARUHASHI
//			・初版作成
//			
//	
//==========================================================================================
#ifndef _RESULT_H_	//二重インクルード防止
#define _RESULT_H_

//==========================================================================================
//	インクルードファイル
//==========================================================================================
//既定ヘッダ

//新規ヘッダ
#include "main.h"

//==========================================================================================
//	構造体定義
//==========================================================================================
typedef enum
{
	RESULT_BG = 0,		//背景画像
	RESULT_ASC,			//リザルト文字
	RESULT_BAR,			//達成度バー
	RESULT_BARON,		//達成度メモリ
	RESULT_ACHIVE,		//達成度文字
	RESULT_COMBO,		//コンボ文字
	RESULT_PHISICALASC,	//体力文字
	RESULT_PRESENT,		//%文字
	RESULT_RANK,		//ランク文字
	RESULT_RANKASC,		//ランク
	RESULT_TITLEASC,	//タイトルへ
	RESULT_NUMBER,		//数字テクスチャ
	RESULT_MAX,			//リザルトテクスチャ総数
} RESULT_LABEL;

struct RESULT
{
	D3DXVECTOR3		Pos;		//画像位置
	D3DXVECTOR3		Size;		//画像サイズ
	D3DXVECTOR2		UV;
	D3DXVECTOR2		UVSize;		//
	RESULT_LABEL	label;		//
	float			fAlpha;		//α値
	bool			bDraw;		//
};

//==========================================================================================
//	クラス定義
//==========================================================================================

//==========================================================================================
//	マクロ定義
//==========================================================================================
void InitResult(void);
void UninitResult(void);
void UpdateResult(void);
void DrawResult(void);
void SetAchiveValue(int iValue);	//達成度設定
void SetComboValue(int iValue);		//コンボ数設定
void SetPhysicalValue(int iValue);	//残体力設定

//==========================================================================================
//	プロトタイプ宣言
//==========================================================================================


#endif