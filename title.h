//==========================================================================================
//	タイトル処理[title.cpp]
//	Author : KAZUNORI MARUHASHI
//
//	Update :
//		YYYY/MM/DD	Updater :
//
//		2017/06/04	Updater : KAZUNORI MARUHASHI
//			
//			
//	
//==========================================================================================
#ifndef _TITLE_H_	//二重インクルード防止
#define _TITLE_H_

//==========================================================================================
//	インクルードファイル
//==========================================================================================
//既定ヘッダ

//新規ヘッダ
#include "main.h"

//==========================================================================================
//	構造体定義
//==========================================================================================
typedef enum
{
	TITLE_TEX_NONE = 0,		//テクスチャ無し
	TITLE_TEX_STAGE1,		//村画像
	TITLE_TEX_STAGE2,			//雪山画像
	TITLE_TEX_STAGE3,			//火山画像
	TITLE_TEX_TITLE,			//タイトル文字
	TITLE_TEX_GAMESTART,		//ゲームスタート文字
	TITLE_TEX_MAX,			//タイトルテクスチャ総数
} TITLE_TEX_LABEL;	//テクスチャ用ラベル

typedef enum
{
	TITLE_OBJ_BG = 0,		//背景画像
	TITLE_OBJ_BGFADE,		//背景フェード用
	TITLE_OBJ_TITLE,		//タイトル文字
	TITLE_OBJ_START,	//ゲームスタート文字
	TITLE_OBJ_MAX,		//タイトルテクスチャ総数
} TITLE_OBJ_LABEL;	//オブジェクト用ラベル

struct TITLE
{
	D3DXVECTOR3		Pos;		//画像位置
	D3DXVECTOR3		Size;		//画像サイズ
	D3DXVECTOR2		UV;			//UV値
	D3DXVECTOR2		UVSize;		//UVサイズ
	TITLE_TEX_LABEL	label;	//描画テクスチャ
	float			fAlpha;		//α値
	bool			bDraw;		//描画可否
};

//==========================================================================================
//	クラス定義
//==========================================================================================

//==========================================================================================
//	マクロ定義
//==========================================================================================
void InitTitle(void);
void UninitTitle(void);
void UpdateTitle(void);
void DrawTitle(void);

//==========================================================================================
//	プロトタイプ宣言
//==========================================================================================


#endif